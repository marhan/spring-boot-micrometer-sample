version: '3.1'

volumes:
  prometheus_data: {}
  grafana_data: {}
  elasticsearch_data: {}

  springboot_data: {}

networks:
  monitoring:
    driver: bridge

services:

  elasticsearch:
    build:
      context: ./elastic/elasticsearch/
    volumes:
      - ./elastic/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - cluster.name=mircometer-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - monitoring

  kibana:
    build:
      context: ./elastic/kibana/
    volumes:
      - ./elastic/kibana/kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "5601:5601"
    networks:
      - monitoring
    depends_on:
      - elasticsearch

  springboot:  
    build:
      context: ./spring-boot
    depends_on:
      - elasticsearch
    image: springboot-micrometer
    volumes:
      - ./elastic/kibana/kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - 8090:8080    
    environment:
      - "SPRING_PROFILES_ACTIVE=docker,chaos-monkey"
    networks:
      - monitoring
    restart: always

  frontend:    
    build:
      context: ./frontend
    depends_on:
      - springboot
    image: frontend-micrometer
    ports:
      - 8091:8080
    networks:
      - monitoring
    restart: always

  prometheus:
    image: prom/prometheus:v2.8.1
    volumes:
      - ./prometheus/prometheus_config:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - springboot
    networks:
      - monitoring
    restart: always

  grafana:
    image: grafana/grafana:6.1.1
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./prometheus/grafana_config/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./prometheus/grafana_config/config.monitoring
    networks:
      - monitoring
    restart: always


