buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'net.ltgt.apt' version '0.10'
    id 'com.google.cloud.tools.jib' version '1.0.2'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'de.markushanses.sample.micrometer'
version = '1'
targetCompatibility = '11'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    //compile('io.micrometer:micrometer-core')
    //compile 'io.dropwizard.metrics:metrics-core:4.0.3'
}

dependencies {

    // minimal spring boot with actuator
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")

    // lombok
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    implementation("org.projectlombok:lombok:${lombokVersion}")

    // database
    implementation('org.liquibase:liquibase-core:3.6.2')
    implementation('com.h2database:h2:1.4.197')
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")

    // swagger
    implementation("io.springfox:springfox-swagger2:${springfoxSwaggerVersion}")
    implementation("io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}")

    // monitoring
    implementation('io.micrometer:micrometer-registry-prometheus:1.1.0')
    implementation('io.micrometer:micrometer-registry-elastic:1.1.0')
    implementation('io.github.mweirauch:micrometer-jvm-extras:0.1.2') // todo: remove it later

    // chaos engineering
    implementation('de.codecentric:chaos-monkey-spring-boot:2.0.2')

    // dev tools
    runtimeOnly("org.springframework.boot:spring-boot-devtools:${springBootVersion}")

    // test
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}

